name: Continuous Integration

on:
  push:
    branches: ['*']
    paths-ignore:
      - 'docs/**'
  pull_request:
    branches: [ master ]
    paths-ignore:
      - 'docs/**'

jobs:
  tests:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:11.7
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    env:
      RAILS_ENV: test
      RUBYOPT: '-W:no-deprecated -W:no-experimental'
      JAVASCRIPT_DRIVER: headless_chrome
      DB_HOST: localhost
      DB_NAME_TEST: postgres
      DB_USERNAME: postgres
      DB_PASSWORD: postgres
      CAPYBARA_MAX_WAIT_TIME: 5
      CC_TEST_REPORTER_ID: ${{ secrets.CC_TEST_REPORTER_ID }}
      COVERAGE: true

    steps:
      - name: Setup Timezone
        uses: zcong1993/setup-timezone@master
        with:
          timezone: Asia/Kolkata
      - uses: actions/checkout@v2
      - name: Use Ruby 2.7
        uses: actions/setup-ruby@v1
        with:
          ruby-version: '2.7'
      - name: Restore Bundle
        uses: actions/cache@master
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-gems-
      - name: Bundle
        run: |
          bundle config path vendor/bundle
          bundle install --jobs 4 --retry 3
      - name: Rubocop
        run: bundle exec rubocop
      - name: Setup Database
        run: |
          bundle exec rake db:schema:load
      - name: Restore Assets
        uses: actions/cache@master
        with:
          path: public/assets
          key: ${{ runner.os }}-assets
      - name: Restore Lerna
        uses: actions/cache@master
        with:
          path: |
            node_modules
            app/javascript/packages/*/node_modules
          key: ${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}
      - name: Precompile Assets
        run: |
          bundle exec rails assets:precompile
          bundle exec rails assets:clean
      - name: Set ENV for CodeClimate (Pull Request)
        run: |
          git fetch --no-tags --prune --depth=1 origin +refs/heads/$GITHUB_HEAD_REF:refs/remotes/origin/$GITHUB_HEAD_REF
          echo "::set-env name=GIT_BRANCH::$GITHUB_HEAD_REF"
          echo "::set-env name=GIT_COMMIT_SHA::$(git rev-parse origin/$GITHUB_HEAD_REF)"
        if: github.event_name == 'pull_request'
      - name: Set ENV for CodeClimate (Push)
        run: |
          echo "::set-env name=GIT_BRANCH::$GITHUB_REF"
          echo "::set-env name=GIT_COMMIT_SHA::$GITHUB_SHA"
        if: github.event_name == 'push'
      - name: Code Coverage (Before)
        run: |
          curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
          chmod +x ./cc-test-reporter
          ./cc-test-reporter before-build
      - name: Specs & Code Coverage (After)
        run: |
          bundle exec rspec --format progress
          ./cc-test-reporter after-build -t simplecov --exit-code $?
      - uses: actions/upload-artifact@v1
        if: failure()
        with:
          name: Screenshots
          path: tmp/capybara
