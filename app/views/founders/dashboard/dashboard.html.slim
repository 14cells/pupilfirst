- content_for :head
  title SV.CO Founder Dashboard
  meta name="description" content="A guided set of targets on how to build a great startup."

#dashboard-show-tour.hide [
  data-intro=t('dashboard.show.tour.intro')
  data-program-week-number=t('dashboard.show.tour.week_number')
  data-target-group=t('dashboard.show.tour.target_group')
  data-target=t('dashboard.show.tour.target')
  data-target-details=t('dashboard.show.tour.target_details')
  data-target-status=t('dashboard.show.tour.target_status')
  data-add-event=t('dashboard.show.tour.add_event')
  data-performance=t('dashboard.show.tour.performance')
  data-tour-flag=@tour.to_s
  ]

#founder-dashboard
  == render 'dashboard_header'

  == react_component('FounderDashboard')

  / .founder-dashboard-container
  /   .fixed-dashboard-header
  /     .container
  /       .dashboard-header-container.clearfix.m-x-auto.text-xs-center
  /         .pull-sm-left.pull-xs-right
  /           .btn-group.filter-targets-dropdown
  /             button.btn.btn-with-icon.btn-ghost-primary.btn-md.text-xs-left.filter-targets-dropdown__button.dropdown-toggle aria-expanded="false" aria-haspopup="true" data-toggle="dropdown" type="button"
  /               span.filter-targets-dropdown__icon
  /                 - if instance_variable_defined?(:@filtered_targets)
  /                   i.fa class=TargetDecorator.fa_icon_for_filter(params[:filter])
  /                 - else
  /                   i.fa.fa-filter
  /               span.hidden-xs-down.p-r-1
  /                - if params[:filter].present?
  /                  | #{ t("dashboard.show.target_filters.#{params[:filter]}.filter_text") }
  /                - else
  /                  | All Targets
  /               span.pull-xs-right.filter-targets-dropdown__arrow.hidden-xs-down
  /
  /             .dropdown-menu.filter-targets-dropdown__menu
  /               - selected_filter =  instance_variable_defined?(:@filtered_targets) ? params[:filter] : 'all_targets'
  /               - Founders::TargetsFilterService.filters_except(selected_filter).each do |filter|
  /                 a.dropdown-item.filter-targets-dropdown__menu-item href=dashboard_founder_path(filter: filter) role="button"
  /                   span.filter-targets-dropdown__menu-item-icon
  /                     i.fa class=TargetDecorator.fa_icon_for_filter(filter)
  /                   | #{ t("dashboard.show.target_filters.#{filter}.filter_text") }
  /
  /         .pull-sm-right.pull-xs-left
  /           button#performance-button.btn.btn-with-icon.btn-md.btn-ghost-primary.performance-overview-link.text-uppercase data-toggle="modal" data-performance-url=performance_stats_founder_url
  /             i.fa.fa-tachometer
  /             span
  /               | Performance
  /           button#add-event-button.btn.btn-with-icon.btn-md.btn-secondary.text-uppercase.btn-timeline-builder.js-founder-dashboard__trigger-builder data-toggle="modal"
  /             i.fa.fa-plus
  /             span
  /               | Add Event
  /   .targets-board.m-x-auto.target-accordion
  /     - if instance_variable_defined?(:@filtered_targets)
  /       == render 'selected_targets'
  /     - elsif @program_week.present?
  /       == render 'program_week', program_week: @program_week
  /     - else
  /       .target-group.m-y-3
  /         .target-group-header.text-xs-center
  /           .target-group-header-details
  /             p There are no targets to show

== render 'view-slides'
== render 'timeline_builder'
== render 'performance_overview'
