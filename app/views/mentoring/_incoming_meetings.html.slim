- if state.incoming_meetings.present?
  br
  ' Meeting requests received
  table#t02.table.table-borderless
      thead
        tr
          th Purpose
          th From
          th Date
          th Time
          th Status
      tbody
      - state.incoming_meetings.each do |meet|
        tr
          = simple_form_for(meet, url: mentor_mentor_meeting_url(state.mentor,meet), method: :patch) do |f|
            td = meet.purpose
            td = meet.user.fullname
            td = meet.suggested_meeting_at.to_date
            td = meet.suggested_meeting_at.strftime("%l:%M %P")
            td = meeting_status_html meet.status
            td
              - if meet.status == MentorMeeting::STATUS_REQUESTED
                ' #{f.submit "Accept", class: "btn btn-success"}  
                = f.submit "Reject", class: "btn btn-danger"  
              - elsif meet.status == MentorMeeting::STATUS_ACCEPTED && meet.meeting_at < 15.minutes.from_now
                = link_to 'Start Meeting', mentor_meetings_live_url(meet.id),  class: 'btn btn-primary'
              - elsif meet.status == MentorMeeting::STATUS_COMPLETED && !meet.gave_feedback?(current_user)
                = link_to 'Give Feedback', mentor_meetings_feedback_url(meet.id),  class: 'btn btn-primary'


