- session[:startup_id] = @startup.id
- if @startup.errors.any?
  h4 Errors
  = @startup.errors.full_messages.first if @startup.errors.any?
.wrapper-form
  = simple_form_for @startup, :html => { :class => 'form-horizontal' } do |f|
    = f.input :name, label: "Startup Name"
    = f.input :email, label: "Company's email"
    = f.input :phone, label: "Company's contact number"
    = f.input :logo, as: :file, required: false
    = f.input :pitch, as: :text, hint: "max 140 characters",  input_html: {rows: 8, class:'span5', placeholder: 'max 140 characters'}
    = f.input :address, as: :text, input_html: {rows: 10, class:'span8', placeholder: 'Office Address'}
    = f.input :website
    = f.input :about, as: :text, hint: "500 words max", input_html: {rows: 10, class:'span8', placeholder: 'max 500 words'}
    = f.association :categories, collection: Category.startup_category, as: :select, hint: "Min:1, Max:3 categories", input_html:{class: "span4"}
    = f.input :twitter_link
    = f.input :facebook_link
    = f.submit :class=> 'btn btn-success'
    = link_to 'Show', @startup, :class => "btn btn-info"

    <!-- Modal -->
  #myModal.modal.fade aria-hidden="true" aria-labelledby="myModalLabel" role="dialog" tabindex="-1"
    .modal-dialog
      - resource = User.new
      - resource_name = 'user'
      = simple_form_for resource, :as => resource_name, :url => invitation_path(resource_name), :html => {:method => :post, :class => "form-horizontal"} do |f|
        .modal-content
          .modal-header
            button.close aria-hidden="true" data-dismiss="modal" type="button"  &times;
            h4#myModalLabel.modal-title
              = t "devise.invitations.new.header"
          .modal-body
            h2
            = devise_error_messages!
            - resource.class.invite_key_fields.each do |field|
              = f.input field
          .modal-footer
            = f.submit t("devise.invitations.new.submit_button"), class: 'btn btn-primary'

            /button.btn.btn-default data-dismiss="modal" type="button"  Close
            /button.btn.btn-primary type="button"  Save changes


javascript:
  $(function(){
    $('select').selectpicker();
    counter = function(ele, help_ele, max_chars, is_words) {
        var value = $(ele).val();

        if (value.length == 0) {
            $(help_ele).html(0+"/"+max_chars+ " "+(is_words ? "words" : "characters"));
            return;
        }

        var regex = /\s+/gi;
        var wordCount = value.trim().replace(regex, ' ').split(' ').length;
        // var totalChars = value.length;
        var charCount = value.trim().length;
        // var charCountNoSpace = value.replace(regex, '').length;

        $(help_ele).html((is_words ? wordCount : charCount)+"/"+max_chars+" characters");
    };
    update_pitch = function(){
      var help_ele = $(".startup_pitch .help-block")
      var ele = $(".startup_pitch #startup_pitch")
      counter(ele, help_ele, #{Startup::MAX_PITCH_CHARS})
    }
    update_about = function(){
      var help_ele = $(".startup_about .help-block")
      var ele = $(".startup_about #startup_about")
      counter(ele, help_ele, #{Startup::MAX_ABOUT_WORDS}, true)
    }

    $(".startup_pitch #startup_pitch").click(update_pitch).change(update_pitch).keydown(update_pitch).keypress(update_pitch).keyup(update_pitch).blur(update_pitch).focus(update_pitch);
    $(".startup_about #startup_about").click(update_about).change(update_about).keydown(update_about).keypress(update_about).keyup(update_about).blur(update_about).focus(update_about);
  })

