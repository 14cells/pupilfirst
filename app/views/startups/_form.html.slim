- session[:startup_id] = @startup.id
- if @startup.errors.any?
  h4 Errors
  = @startup.errors.full_messages.first if @startup.errors.any?
.wrapper-form.form
  = simple_form_for @startup, :html => { :class => 'form-horizontal' } do |f|
    = f.input :name, label: "Startup Name",  input_html: {class:'form-control'}
    = f.input :email, label: "Company's email",  input_html: {class:'form-control'}
    = f.input :phone, label: "Company's contact number",  input_html: {class:'form-control'}
    = f.input :logo, as: :file, required: false
    = f.input :pitch, as: :text, hint: "max 140 characters",  input_html: {rows: 8, class:'form-control', placeholder: 'max 140 characters'}
    = f.input :address, as: :text, input_html: {rows: 10, class:'form-control', placeholder: 'Office Address'}
    = f.input :website,  input_html: {class:'form-control'}
    = f.input :about, as: :text, hint: "500 words max", input_html: {rows: 10, class:'form-control', placeholder: 'max 500 words'}
    = f.association :categories, collection: Category.startup_category, as: :select, hint: "Min:1, Max:3 categories", input_html:{class: 'form-control'}
    = f.input :twitter_link,  input_html: {class:'form-control'}
    = f.input :facebook_link,  input_html: {class:'form-control'}
    #pre_funds.optional.checkbox.col-md-6
      .checkbox-inline
      label
        = check_box_tag "pre_funds"
        Have you recived funds already?
      .content
        = f.input :pre_funds
    #startup_before.optional.checkbox
      .checkbox-inline
      label
        = check_box_tag "startup_history"
        Have you run a startup before?
      .content
        .form-group
          label.sr-only Email address
          = text_field_tag "startup[startup_before][startup_name]", (@startup.startup_before['startup_name'] rescue nil), placeholder: "Startup Name", class: "form-control"
        .form-group
          = text_field_tag "startup[startup_before][startup_descripition]", (@startup.startup_before['startup_descripition'] rescue nil), placeholder: "startup_descripition", class: "form-control"

    .sv_help
      = f.input :help_from_sv, collection: ["help1", "help2"], input_html:{class: 'form-control'}
    .form-group
    = f.submit :class=> 'btn btn-success'
    = link_to 'Show', @startup, :class => "btn btn-info"

javascript:
  $(function(){
    $(".optional .content").hide()
    $(".optional input:checkbox").click(function() {
      var $this = $(this);
      var optional = $($this).parent().parent()
      if ($this.is(':checked')) {
        $(".content",optional).show()
      } else {
        $(".content",optional).hide()
      }
    });

    $('select').selectpicker();
    counter = function(ele, help_ele, max_chars, is_words) {
        var value = $(ele).val();

        if (value.length == 0) {
            $(help_ele).html(0+"/"+max_chars+ " "+(is_words ? "words" : "characters"));
            return;
        }

        var regex = /\s+/gi;
        var wordCount = value.trim().replace(regex, ' ').split(' ').length;
        // var totalChars = value.length;
        var charCount = value.trim().length;
        // var charCountNoSpace = value.replace(regex, '').length;

        $(help_ele).html((is_words ? wordCount : charCount)+"/"+max_chars+" characters");
    };
    update_pitch = function(){
      var help_ele = $(".startup_pitch .help-block")
      var ele = $(".startup_pitch #startup_pitch")
      counter(ele, help_ele, #{Startup::MAX_PITCH_CHARS})
    }
    update_about = function(){
      var help_ele = $(".startup_about .help-block")
      var ele = $(".startup_about #startup_about")
      counter(ele, help_ele, #{Startup::MAX_ABOUT_WORDS}, true)
    }

    $(".startup_pitch #startup_pitch").click(update_pitch).change(update_pitch).keydown(update_pitch).keypress(update_pitch).keyup(update_pitch).blur(update_pitch).focus(update_pitch);
    $(".startup_about #startup_about").click(update_about).change(update_about).keydown(update_about).keypress(update_about).keyup(update_about).blur(update_about).focus(update_about);
  })

