#admissions_onboard-teams
= semantic_form_for form, url: admin_onboard_teams_onboard_path, method: :post, html: { novalidate: false } do |f|
  = f.semantic_errors
  = f.inputs 'Input team details to onboard'
    = f.input :team_name, input_html: { required: true }
    span class='team-member-info'
      .team-member-info__name
        = f.input :members, label: 'Member 1', placeholder: 'Name', input_html: { name:'members[1][name]', required: true }
      .team-member-info__email
        = f.input :members, label: '', as: :email, placeholder: 'Email', input_html: { name:'members[1][email]', required: true }
    span class='team-member-info'
      .team-member-info__name
        = f.input :members, label: 'Member 2', placeholder: 'Name', input_html: { name: 'members[2][name]' }
      .team-member-info__email
        = f.input :members, label: '', as: :email, placeholder: 'Email', input_html: { name: 'members[2][email]' }
    span class='team-member-info'
      .team-member-info__name
        = f.input :members, label: 'Member 3', placeholder: 'Name', input_html: { name: 'members[3][name]' }
      .team-member-info__email
        = f.input :members, label: '', as: :email, placeholder: 'Email', input_html: { name: 'members[3][email]' }
    span class='team-member-info'
      .team-member-info__name
        = f.input :members, label: 'Member 4', placeholder: 'Name', input_html: { name: 'members[4][name]' }
      .team-member-info__email
        = f.input :members, label: '', as: :email, placeholder: 'Email', input_html: { name: 'members[4][email]' }
    = f.input :school_id, as: :select, collection: School.where("lower(name) LIKE ?", "vr")
  = f.submit 'Onboard'
