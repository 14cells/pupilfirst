- batch_number = params[:karma_points_filter].present? ? params[:karma_points_filter][:batch] : 1
h2 Startup Karma for Batch #{batch_number}

ul
  - collection = startups_by_karma(params[:karma_points_filter])
  li
    strong Active teams:
    | &nbsp;#{collection.count}
  li
    strong Inactive teams:
    | &nbsp;#{Startup.not_dropped_out.where(batch: batch_number).count - collection.count}

table.index_table
  thead
    tr
      th Product
      th.sorted-desc.sortable
        a.not-a-link href='#' Karma Points
  tbody
    - startups_by_karma(params[:karma_points_filter]).each_with_index do |points_array, idx|
      - startup_id, points = points_array
      - startup = Startup.find(startup_id)
      tr class="#{(idx + 1).even? ? 'even' : 'odd'}"
        td = link_to "#{startup.product_name}#{startup.name.present? ? " (#{startup.name})" : ''}", admin_startup_path(startup)
        td = points

h2 Founder Karma for Batch #{batch_number}

table.index_table
  thead
    tr
      th Full Name
      th Role
      th Startup
      th.sorted-desc.sortable
        a.not-a-link href='#' Karma Points
  tbody
    - users_by_karma(params[:karma_points_filter]).each_with_index do |points_array, idx|
      - user_id, points = points_array
      - user = User.includes(:startup).find(user_id)
      tr class="#{(idx + 1).even? ? 'even' : 'odd'}"
        td = link_to user.fullname, admin_user_path(user)
        td = founder_roles user.roles
        td
          - if user.startup.present?
            = link_to user.startup.name, admin_startup_path(user.startup)
          - else
            em Not a founder (anymore?)
        td = points
