= semantic_form_for [:admin, @target] do |f|
  = f.semantic_errors *f.object.errors.keys
  = f.inputs 'Target details' do
    = f.input :startup,
      label: 'Product',
      member_label: proc { |startup| "#{startup.product_name}#{startup.name.present? ? " (#{startup.name})" : ''}" }

    = f.input :status,
      as: :select,
      collection: Target.valid_statuses,
      include_blank: false,
      member_label: proc { |status| t("target.status.#{status}") }

    = f.input :completed_at, as: :just_datetime_picker
    = f.input :completion_comment
    = f.input :role,
      as: :select,
      collection: Target.valid_roles,
      include_blank: false,
      member_label: proc { |role| t("role.#{role}") }

    = f.input :title
    = f.hidden_field :description
    .label-replica
      ' description
      abbr title="required" *
    trix-editor.input-replica input="target_description" class="#{'error-replica' if @target.errors[:description].present?}"
    - if @target.errors[:description].present?
      p.inline-errors-replica #{@target.errors[:description][0]}
    = f.input :slideshow_embed
    = f.input :resource_url
    = f.input :completion_instructions
    = f.input :due_date, as: :just_datetime_picker
    = f.input :assigner, include_blank: false
    = f.input :rubric, as: :file

  = f.submit
