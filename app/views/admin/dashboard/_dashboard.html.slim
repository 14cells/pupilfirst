/= javascript_include_tag '//www.google.com/jsapi', 'chartkick'
- batch_number = params[:batch].present? ? params[:batch] : '1'
.table_tools
  ul.scopes.table_tools_segmented_control style="width: calc((100% - 10px)); float: right;"
    li class="#{ (batch_number == '1' ? 'selected':'') + ' scope'}"
      a.table_tools_button href=admin_dashboard_path(batch: 1) Batch 1
    li class="#{ (batch_number == '2' ? 'selected':'') + ' scope'}"
      a.table_tools_button href=admin_dashboard_path(batch: 2) Batch 2
.dashboard-container
  .dashboard-item
    - timeline_events_verified = TimelineEvent.for_batch(batch_number).verified.order('verified_at DESC').includes(:timeline_event_type, :startup)
    .heading Timeline Events - Verified

    .content
      ol
        - timeline_events_verified.limit(10).each do |timeline_event|
          li = link_to "#{timeline_event.startup.product_name} - #{timeline_event.timeline_event_type.title}", admin_timeline_event_path(timeline_event)

    .footer-spacer

    - trend = TimelineEvent.for_batch(batch_number).verified.group_by_week(:verified_at, range: 3.weeks.ago..Time.now).count.map { |c| c[1] }

    .left-of-button title="Trend: #{trend.join(', ')}"
      = Sparkr.sparkline trend

    a.button.view-all href=admin_timeline_events_path(q: { verified_status_equals: TimelineEvent::VERIFIED_STATUS_VERIFIED, startup_batch_number_equals: batch_number })
      | View All (#{timeline_events_verified.count})

  .dashboard-item
    - timeline_events_pending = TimelineEvent.for_batch(batch_number).pending.order('timeline_events.created_at DESC').includes(:timeline_event_type, :startup)
    .heading Timeline Events - Pending

    .content
      ol
        - timeline_events_pending.limit(10).each do |timeline_event|
          li = link_to "#{timeline_event.startup.product_name} - #{timeline_event.timeline_event_type.title}", admin_timeline_event_path(timeline_event)

    .footer-spacer

    - trend = TimelineEvent.for_batch(batch_number).group_by_week('timeline_events.created_at', range: 3.weeks.ago..Time.now).count.map { |c| c[1] }

    .left-of-button title="Trend (total): #{trend.join(', ')}"
      = Sparkr.sparkline trend

    a.button.view-all href=admin_timeline_events_path(q: { verified_status_equals: TimelineEvent::VERIFIED_STATUS_PENDING, startup_batch_number_equals: batch_number  })
      | View All (#{timeline_events_pending.count})

  .dashboard-item
    - startups_without_live_targets = Startup.where(batch_number: batch_number).without_live_targets

    .heading Startups without Live Team Targets

    .content
      ol
        - startups_without_live_targets.limit(10).each do |startup|
          li = link_to startup.display_name, admin_startup_path(startup)

    .footer-spacer

    a.button.view-all href=admin_startups_path(scope: 'without_live_targets', q: {batch_number_equals: batch_number})
      | View All (#{startups_without_live_targets.count})

  .dashboard-item
    - startups_with_targets_completed_last_week = Startup.where(batch_number: batch_number).with_targets_completed_last_week.order('targets.completed_at DESC')

    .heading Startups with Targets Completed Last Week

    .content
      ol
        - startups_with_targets_completed_last_week.limit(10).each do |startup|
          li = link_to startup.display_name, admin_startup_path(startup)

    .footer-spacer

    - trend = Startup.where(batch_number: batch_number).with_completed_targets.group_by_week('targets.completed_at', range: 3.weeks.ago..Time.now).count.map { |c| c[1] }

    .left-of-button title="Trend: #{trend.join(', ')}"
      = Sparkr.sparkline trend

    a.button.view-all href=admin_startups_path(scope: 'with_targets_completed_last_week', q: {batch_number_equals: batch_number})
      | View All (#{startups_with_targets_completed_last_week.count})

  .dashboard-item
    - startup_feedback_from_last_week = StartupFeedback.for_batch(batch_number).where('startup_feedback.created_at > ?', 1.week.ago).order('startup_feedback.created_at DESC')

    .heading Feedback Submitted Last Week

    .content
      ol
        - startup_feedback_from_last_week.limit(10).each do |startup_feedback|
          li = link_to "#{startup_feedback.faculty.name} - #{startup_feedback.startup.product_name}", admin_startup_feedback_path(startup_feedback)

    .footer-spacer

    - trend = StartupFeedback.for_batch(batch_number).group_by_week('startup_feedback.created_at', range: 3.weeks.ago..Time.now).count.map { |c| c[1] }

    .left-of-button title="Trend: #{trend.join(', ')}"
      = Sparkr.sparkline trend

    a.button.view-all href=admin_startup_feedback_index_path(q: { created_at_gteq: 1.week.ago.strftime('%Y-%m-%d'), startup_batch_number_equals: batch_number })
      | View All (#{startup_feedback_from_last_week.count})

  .dashboard-item
    - connect_requests_confirmed = ConnectRequest.for_batch(batch_number).confirmed.order('connect_requests.confirmed_at DESC')

    .heading Connect Requests - Confirmed

    .content
      ol
        - connect_requests_confirmed.limit(10).each do |connect_request|
          li = link_to "#{connect_request.startup.product_name} - #{connect_request.faculty.name}", admin_connect_request_path(connect_request)

    .footer-spacer

    - trend = ConnectRequest.for_batch(batch_number).confirmed.group_by_week('connect_requests.created_at', range: 3.weeks.ago..Time.now).count.map { |c| c[1] }

    .left-of-button
      span title="Trend (past): #{trend.join(', ')}" = Sparkr.sparkline trend

    a.button.view-all href=admin_connect_requests_path(scope: 'confirmed', q: {startup_batch_number_equals: batch_number})
      | View All (#{connect_requests_confirmed.count})

  .dashboard-item
    - connect_requests_requested = ConnectRequest.for_batch(batch_number).requested

    .heading Connect Requests - Requested

    .content
      ol
        - connect_requests_requested.limit(10).each do |connect_request|
          li = link_to "#{connect_request.startup.product_name} - #{connect_request.faculty.name}", admin_connect_request_path(connect_request)

    .footer-spacer

    - trend = ConnectRequest.for_batch(batch_number).group_by_week('connect_requests.created_at', range: 3.weeks.ago..Time.now).count.map { |c| c[1] }

    .left-of-button
      span title="Trend (total): #{trend.join(', ')}" = Sparkr.sparkline trend

    a.button.view-all href=admin_connect_requests_path(scope: 'requested', q: {batch_number_equals: batch_number})
      | View All (#{connect_requests_requested.count})

  .dashboard-item

    .heading Connect Slots - Active

    .content
      ol
        - Faculty.available_for_connect.each do |faculty|
          - available_slots = faculty.connect_slots.available_for_founder
          - if available_slots.present?
            - slot_timings = available_slots.pluck(:slot_at).map{ |slot| slot.in_time_zone('Asia/Calcutta').strftime('%b %-d %-I:%M %p')}.join(',')
            - slot_summary = available_slots.count < 3 ? slot_timings : available_slots.count
            li = link_to "#{faculty.name} (#{slot_summary})", admin_connect_slots_path('q[faculty_id_eq]' => faculty.id,
                scope: 'available_for_founder',
                commit: 'Filter')


    .footer-space

    a.button.view-all href=admin_connect_slots_path(scope: 'available_for_founder')
      | View All (#{ConnectSlot.available_for_founder.count})


  .dashboard-item
    - inactive_startups = Startup.where(batch_number: batch_number).inactive

    .heading Inactive Startups last week

    .content
      ol
        - inactive_startups.limit(10).each do |inactive_startup|
          li = link_to inactive_startup.display_name, admin_startup_path(inactive_startup)

    .footer-spacer

    - trend = [3.weeks.ago, 2.weeks.ago, 1.week.ago, Time.now].map { |time| Startup.where(batch_number: batch_number).inactive(date: time).count }

    .left-of-button
      span title="Trend: #{trend.join(', ')}" = Sparkr.sparkline trend

    a.button.view-all href=admin_startups_path(scope: 'inactive', q: {batch_number_equals: batch_number})
      | View All (#{inactive_startups.count})
